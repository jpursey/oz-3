constexpr oz3::MacroCodeDef kMacroCode_LoadWord[] = {
    {.source = "$r",
     .prefix = {0, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "UL;MOV(p,m);"},
    {.source = "($r)",
     .prefix = {1, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "UL;LKR(m);ADR(m);LD(p);UL;"},
    {.source = "($r + $v)",
     .prefix = {2, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "LD(C0);UL;ADD(C0,m);LKR(m);ADR(C0);LD(p);UL;"},
    {.source = "(SP)",
     .prefix = {24, 5},
     .code = "UL;LKR(SP);ADR(SP);LD(p);UL;"},
    {.source = "(SP + $v)",
     .prefix = {25, 5},
     .code = "LD(C0);UL;ADD(C0,SP);LKR(SP);ADR(C0);LD(p);UL;"},
    {.source = "(FP)",
     .prefix = {26, 5},
     .code = "UL;LKR(FP);ADR(FP);LD(p);UL;"},
    {.source = "(FP + $v)",
     .prefix = {27, 5},
     .code = "LD(C0);UL;ADD(C0,FP);LKR(FP);ADR(C0);LD(p);UL;"},
    {.source = "$v",
     .prefix = {28, 5},
     .code = "LD(p);UL;"},
    {.source = "S($v)",
     .prefix = {29, 5},
     .code = "LD(C0);UL;LK(STACK);ADR(C0);LD(p);UL;"},
    {.source = "D($v)",
     .prefix = {30, 5},
     .code = "LD(C0);UL;LK(DATA);ADR(C0);LD(p);UL;"},
    {.source = "E($v)",
     .prefix = {31, 5},
     .code = "LD(C0);UL;LK(EXTRA);ADR(C0);LD(p);UL;"},
};

constexpr oz3::MacroCodeDef kMacroCode_LoadDword[] = {
    {.source = "[$r]",
     .prefix = {0, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "UL;LKR(m);ADR(m);LD(p0);LD(p1);UL;"},
    {.source = "[$r + $v]",
     .prefix = {1, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "LD(C0);UL;ADD(C0,m);LKR(m);ADR(C0);LD(p0);LD(p1);UL;"},
    {.source = "$R",
     .prefix = {4, 3},
     .arg = {oz3::ArgType::kDwordReg, 2},
     .code = "UL;MOV(p0,m0);MOV(p1,m1);"},
    {.source = "[SP]",
     .prefix = {20, 5},
     .code = "UL;LKR(SP);ADR(SP);LD(p0);LD(p1);UL;"},
    {.source = "[SP + $v]",
     .prefix = {21, 5},
     .code = "LD(C0);UL;ADD(C0,SP);LKR(SP);ADR(C0);LD(p0);LD(p1);UL;"},
    {.source = "[FP]",
     .prefix = {22, 5},
     .code = "UL;LKR(FP);ADR(FP);LD(p0);LD(p1);UL;"},
    {.source = "[FP + $v]",
     .prefix = {23, 5},
     .code = "LD(C0);UL;ADD(C0,FP);LKR(FP);ADR(C0);LD(p0);LD(p1);UL;"},
    {.source = "$V",
     .prefix = {24, 5},
     .code = "LD(p0);LD(p1);UL;"},
    {.source = "S[$v]",
     .prefix = {25, 5},
     .code = "LD(C0);UL;LK(STACK);ADR(C0);LD(p0);LD(p1);UL;"},
    {.source = "D[$v]",
     .prefix = {26, 5},
     .code = "LD(C0);UL;LK(DATA);ADR(C0);LD(p0);LD(p1);UL;"},
    {.source = "E[$v]",
     .prefix = {27, 5},
     .code = "LD(C0);UL;LK(EXTRA);ADR(C0);LD(p0);LD(p1);UL;"},
};

constexpr oz3::MacroCodeDef kMacroCode_StoreWord[] = {
    {.source = "($r)",
     .prefix = {0, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "UL;LKR(m);ADR(m);ST(p);UL;"},
    {.source = "($r + $v)",
     .prefix = {1, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "LD(C0);UL;ADD(C0,m);LKR(m);ADR(C0);ST(p);UL;"},
    {.source = "S($v)",
     .prefix = {16, 5},
     .code = "LD(C0);UL;LK(STACK);ADR(C0);ST(p);UL;"},
    {.source = "D($v)",
     .prefix = {17, 5},
     .code = "LD(C0);UL;LK(DATA);ADR(C0);ST(p);UL;"},
    {.source = "E($v)",
     .prefix = {18, 5},
     .code = "LD(C0);UL;LK(EXTRA);ADR(C0);ST(p);UL;"},
    {.source = "(SP)",
     .prefix = {19, 5},
     .code = "UL;LKR(SP);ADR(SP);ST(p);UL;"},
    {.source = "(SP + $v)",
     .prefix = {20, 5},
     .code = "LD(C0);UL;ADD(C0,SP);LKR(SP);ADR(C0);ST(p);UL;"},
    {.source = "(FP + $v)",
     .prefix = {21, 5},
     .code = "LD(C0);UL;ADD(C0,FP);LKR(FP);ADR(C0);ST(p);UL;"},
};

constexpr oz3::MacroCodeDef kMacroCode_StoreDword[] = {
    {.source = "[$r]",
     .prefix = {0, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "UL;LKR(m);ADR(m);ST(p0);ST(p1);UL;"},
    {.source = "[$r + $v]",
     .prefix = {1, 2},
     .arg = {oz3::ArgType::kWordReg, 3},
     .code = "LD(C0);UL;ADD(C0,m);LKR(m);ADR(C0);ST(p0);ST(p1);UL;"},
    {.source = "S[$v]",
     .prefix = {16, 5},
     .code = "LD(C0);UL;LK(STACK);ADR(C0);ST(p0);ST(p1);UL;"},
    {.source = "D[$v]",
     .prefix = {17, 5},
     .code = "LD(C0);UL;LK(DATA);ADR(C0);ST(p0);ST(p1);UL;"},
    {.source = "E[$v]",
     .prefix = {18, 5},
     .code = "LD(C0);UL;LK(EXTRA);ADR(C0);ST(p0);ST(p1);UL;"},
    {.source = "[SP]",
     .prefix = {19, 5},
     .code = "UL;LKR(SP);ADR(SP);ST(p0);ST(p1);UL;"},
    {.source = "[SP + $v]",
     .prefix = {20, 5},
     .code = "LD(C0);UL;ADD(C0,SP);LKR(SP);ADR(C0);ST(p0);ST(p1);UL;"},
    {.source = "[FP + $v]",
     .prefix = {21, 5},
     .code = "LD(C0);UL;ADD(C0,FP);LKR(FP);ADR(C0);ST(p0);ST(p1);UL;"},
};

constexpr oz3::MacroCodeDef kMacroCode_LoadSReg[] = {
    {.source = "BC",
     .prefix = {0, 3},
     .code = "MOV(p,BC);"},
    {.source = "BS",
     .prefix = {1, 3},
     .code = "MOV(p,BS);"},
    {.source = "BD",
     .prefix = {2, 3},
     .code = "MOV(p,BD);"},
    {.source = "BE",
     .prefix = {3, 3},
     .code = "MOV(p,BE);"},
    {.source = "FP",
     .prefix = {4, 3},
     .code = "MOV(p,FP);"},
    {.source = "SP",
     .prefix = {5, 3},
     .code = "MOV(p,SP);"},
};

constexpr oz3::MacroCodeDef kMacroCode_StoreSReg[] = {
    {.source = "BC",
     .prefix = {0, 3},
     .code = "MOV(BC,p);"},
    {.source = "BS",
     .prefix = {1, 3},
     .code = "MOV(BS,p);"},
    {.source = "BD",
     .prefix = {2, 3},
     .code = "MOV(BD,p);"},
    {.source = "BE",
     .prefix = {3, 3},
     .code = "MOV(BE,p);"},
    {.source = "FP",
     .prefix = {4, 3},
     .code = "MOV(FP,p);"},
    {.source = "SP",
     .prefix = {5, 3},
     .code = "MOV(SP,p);"},
};

constexpr oz3::MacroDef kMacros[] = {
    {.name = "LoadWord",
     .param = oz3::ArgType::kWordReg,
     .size = 5,
     .code = kMacroCode_LoadWord},
    {.name = "LoadDword",
     .param = oz3::ArgType::kDwordReg,
     .size = 5,
     .code = kMacroCode_LoadDword},
    {.name = "StoreWord",
     .param = oz3::ArgType::kWordReg,
     .size = 5,
     .code = kMacroCode_StoreWord},
    {.name = "StoreDword",
     .param = oz3::ArgType::kDwordReg,
     .size = 5,
     .code = kMacroCode_StoreDword},
    {.name = "LoadSReg",
     .param = oz3::ArgType::kWordReg,
     .size = 3,
     .code = kMacroCode_LoadSReg},
    {.name = "StoreSReg",
     .param = oz3::ArgType::kWordReg,
     .size = 3,
     .code = kMacroCode_StoreSReg},
};

constexpr oz3::InstructionDef kInstructions[] = {
    {.op = 0,
     .op_name = "NOP",
     .code = "UL;"},
    {.op = 1,
     .op_name = "HALT",
     .code = "UL;HALT;"},
    {.op = 2,
     .op_name = "WAIT",
     .arg_source = "$r",
     .arg1 = {oz3::ArgType::kWordReg, 3},
     .code = "UL;WAIT(a);"},
    {.op = 3,
     .op_name = "MOV.LW",
     .arg_source = "$r, $m",
     .arg1 = {oz3::ArgType::kWordReg, 3},
     .arg2 = {oz3::ArgType::kMacro, 5},
     .code = "$LoadWord(a);"},
    {.op = 4,
     .op_name = "MOV.LD",
     .arg_source = "$R, $m",
     .arg1 = {oz3::ArgType::kDwordReg, 2},
     .arg2 = {oz3::ArgType::kMacro, 5},
     .code = "$LoadDword(A);"},
    {.op = 5,
     .op_name = "MOV.SW",
     .arg_source = "$m, $r",
     .arg1 = {oz3::ArgType::kMacro, 5},
     .arg2 = {oz3::ArgType::kWordReg, 3},
     .code = "$StoreWord(b);"},
    {.op = 6,
     .op_name = "MOV.SD",
     .arg_source = "$m, $R",
     .arg1 = {oz3::ArgType::kMacro, 5},
     .arg2 = {oz3::ArgType::kDwordReg, 2},
     .code = "$StoreDword(B);"},
    {.op = 7,
     .op_name = "MOV.LS",
     .arg_source = "$r, $m",
     .arg1 = {oz3::ArgType::kWordReg, 3},
     .arg2 = {oz3::ArgType::kMacro, 3},
     .code = "UL;$LoadSReg(a);"},
    {.op = 8,
     .op_name = "MOV.SS",
     .arg_source = "$m, $r",
     .arg1 = {oz3::ArgType::kMacro, 3},
     .arg2 = {oz3::ArgType::kWordReg, 3},
     .code = "UL;$StoreSReg(b);"},
};

constexpr oz3::InstructionSetDef kInstructionSet = {
    .instructions=kInstructions,
    .macros=kMacros,
};
